{"version":3,"sources":["redux/contacts/contacts-actions.js","components/Container/Container.js","redux/contacts/contacts-reducer.js","redux/store.js","components/Navigation.js","components/AuthNav.js","components/UserMenu/default-avatar.png","components/UserMenu/UserMenu.js","components/AppBar.js","components/PrivateRoute.js","components/PublicRoute.js","App.js","index.js","redux/auth/auth-actions.js","redux/auth/auth-reducer.js","redux/auth/auth-operations.js","redux/auth/auth-selectors.js"],"names":["fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","Container","children","className","items","createReducer","_","payload","state","filter","id","loading","error","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","auth","persistReducer","authReducer","contacts","contactsReducer","devTools","process","persistor","persistStore","styles","link","display","textDecoration","padding","fontWeight","color","activeLink","Navigation","isLoggedIn","useSelector","authSelectors","getIsAuthenticated","to","exact","style","activeStyle","AuthNav","container","alignItems","avatar","marginRight","name","UserMenu","dispatch","useDispatch","getUsername","onLogOut","useCallback","authOperations","logOut","src","defaultAvatar","alt","width","Button","variant","size","onClick","header","justifyContent","borderBottom","AppBar","PrivateRoute","isAuthenticated","redirectTo","routeProps","PublicRoute","restricted","HomeView","lazy","RegisterView","LoginView","ContactsView","App","useEffect","getCurrentUser","fallback","path","ReactDOM","render","StrictMode","document","getElementById","registerRequest","registerSuccess","registerError","loginRequest","loginSuccess","loginError","logoutRequest","logoutSuccess","logoutError","getCurrentUserRequest","getCurrentUserSuccess","getCurrentUserError","initialUserState","email","user","authActions","token","axios","defaults","baseURL","headers","common","Authorization","register","credentials","a","post","response","data","message","logIn","getState","persistedToken","get"],"mappings":"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","file":"static/js/main.c0be33d7.chunk.js","sourcesContent":["import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const fetchContactRequest = createAction(\"contacts/fetchContactRequest\");\r\nexport const fetchContactSuccess = createAction(\"contacts/fetchContactSuccess\");\r\nexport const fetchContactError = createAction(\"contacts/fetchContactError\");\r\n\r\nexport const addContactRequest = createAction(\"contacts/addContactRequest\");\r\nexport const addContactSuccess = createAction(\"contacts/addContactSuccess\");\r\nexport const addContactError = createAction(\"contacts/addContactError\");\r\n\r\nexport const deleteContactRequest = createAction(\r\n  \"contacts/deleteContactRequest\"\r\n);\r\nexport const deleteContactSuccess = createAction(\r\n  \"contacts/deleteContactSuccess\"\r\n);\r\nexport const deleteContactError = createAction(\"contacts/deleteContactError\");\r\n\r\nexport const changeFilter = createAction(\"contacts/changeFilter\");\r\n","import React from \"react\";\r\nimport \"./Container.scss\";\r\n\r\nconst Container = ({ children }) => <div className=\"Container\">{children}</div>;\r\n\r\nexport default Container;\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport {\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n  fetchContactError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  changeFilter,\r\n} from \"./contacts-actions\";\r\n\r\nconst items = createReducer([], {\r\n  [fetchContactSuccess]: (_, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n  [fetchContactRequest]: () => true,\r\n  [fetchContactSuccess]: () => false,\r\n  [fetchContactError]: () => false,\r\n});\r\n\r\nconst filter = createReducer(\"\", {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst error = createReducer(null, {});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  loading,\r\n  error,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport logger from \"redux-logger\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport contactsReducer from \"./contacts/contacts-reducer\";\r\nimport { authReducer } from \"./auth\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst authPersistConfig = {\r\n  key: \"auth\",\r\n  storage,\r\n  whitelist: [\"token\"],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n    contacts: contactsReducer,\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === \"development\",\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport default { store, persistor };\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { authSelectors } from '../redux/auth';\r\n\r\nconst styles = {\r\n  link: {\r\n    display: 'inline-block',\r\n    textDecoration: 'none',\r\n    padding: 12,\r\n    fontWeight: 700,\r\n    color: '#2A363B',\r\n  },\r\n  activeLink: {\r\n    color: '#007bff',\r\n  },\r\n};\r\n\r\nexport default function Navigation() {\r\n  const isLoggedIn = useSelector(authSelectors.getIsAuthenticated);\r\n  return (\r\n    <nav>\r\n      <NavLink to=\"/\" exact style={styles.link} activeStyle={styles.activeLink}>\r\n        Главная\r\n      </NavLink>\r\n\r\n      {isLoggedIn && (\r\n        <NavLink\r\n          to=\"/contacts\"\r\n          exact\r\n          style={styles.link}\r\n          activeStyle={styles.activeLink}\r\n        >\r\n          Контакты\r\n        </NavLink>\r\n      )}\r\n    </nav>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst styles = {\r\n  link: {\r\n    display: \"inline-block\",\r\n    textDecoration: \"none\",\r\n    padding: 12,\r\n    fontWeight: 700,\r\n    color: \"#2A363B\",\r\n  },\r\n  activeLink: {\r\n    color: \"#E84A5F\",\r\n  },\r\n};\r\n\r\nconst AuthNav = () => (\r\n  <div>\r\n    <NavLink\r\n      to=\"/register\"\r\n      exact\r\n      style={styles.link}\r\n      activeStyle={styles.activeLink}\r\n    >\r\n      Регистрация\r\n    </NavLink>\r\n    <NavLink\r\n      to=\"/login\"\r\n      exact\r\n      style={styles.link}\r\n      activeStyle={styles.activeLink}\r\n    >\r\n      Логин\r\n    </NavLink>\r\n  </div>\r\n);\r\n\r\nexport default AuthNav;\r\n","export default __webpack_public_path__ + \"static/media/default-avatar.e44fc4e2.png\";","import React, { useCallback } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { authSelectors, authOperations } from '../../redux/auth';\r\nimport defaultAvatar from './default-avatar.png';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nconst styles = {\r\n  container: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    marginRight: 4,\r\n  },\r\n  name: {\r\n    fontWeight: 700,\r\n    marginRight: 14,\r\n  },\r\n};\r\n\r\nexport default function UserMenu() {\r\n  const dispatch = useDispatch();\r\n  const name = useSelector(authSelectors.getUsername);\r\n\r\n  const onLogOut = useCallback(() => {\r\n    dispatch(authOperations.logOut());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div style={styles.container}>\r\n      <img src={defaultAvatar} alt=\"\" width=\"32\" style={styles.avatar} />\r\n      <span style={styles.name}>Welcome, {name}</span>\r\n      <Button variant=\"primary\" size=\"sm\" onClick={onLogOut}>\r\n        Выйти\r\n      </Button>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport Navigation from './Navigation';\r\nimport AuthNav from './AuthNav';\r\nimport UserMenu from './UserMenu';\r\nimport { authSelectors } from '../redux/auth';\r\n\r\nconst styles = {\r\n  header: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    borderBottom: '1px solid #2A363B',\r\n  },\r\n};\r\n\r\nexport default function AppBar() {\r\n  const isLoggedIn = useSelector(authSelectors.getIsAuthenticated);\r\n  return (\r\n    <header style={styles.header}>\r\n      <Navigation />\r\n      {isLoggedIn ? <UserMenu /> : <AuthNav />}\r\n    </header>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { authSelectors } from '../redux/auth';\r\n\r\n/**\r\n * - Если маршрут приватный и пользователь залогинен, рендерит компонент\r\n * - В противном случае рендерит Redirect на /login\r\n */\r\nexport default function PrivateRoute({\r\n  isAuthenticated,\r\n  redirectTo,\r\n  children,\r\n  ...routeProps\r\n}) {\r\n  const isLoggedIn = useSelector(authSelectors.getIsAuthenticated);\r\n  return (\r\n    <Route {...routeProps}>\r\n      {isLoggedIn ? children : <Redirect to={redirectTo} />}\r\n    </Route>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { authSelectors } from '../redux/auth';\r\n\r\n/**\r\n * - Если маршрут ограниченный, и пользователь залогинен, рендерит редирект на /todos\r\n * - В противном случае рендерит компонент\r\n */\r\nexport default function PublicRoute({\r\n  isAuthenticated,\r\n  redirectTo,\r\n  children,\r\n  ...routeProps\r\n}) {\r\n  const isLoggedIn = useSelector(authSelectors.getIsAuthenticated);\r\n  return (\r\n    <Route {...routeProps}>\r\n      {isLoggedIn && routeProps.restricted ? (\r\n        <Redirect to={redirectTo} />\r\n      ) : (\r\n        children\r\n      )}\r\n    </Route>\r\n  );\r\n}\r\n","import React, { Suspense, lazy, useEffect } from 'react';\r\nimport { Switch } from 'react-router-dom';\r\nimport AppBar from './components/AppBar';\r\nimport Container from './components/Container/Container';\r\nimport { authOperations } from './redux/auth';\r\nimport { useDispatch } from 'react-redux';\r\nimport PrivateRoute from './components/PrivateRoute';\r\nimport PublicRoute from './components/PublicRoute';\r\n\r\nconst HomeView = lazy(() => import('./views/HomeView'));\r\nconst RegisterView = lazy(() => import('./views/RegisterView'));\r\nconst LoginView = lazy(() => import('./views/LoginView'));\r\nconst ContactsView = lazy(() => import('./views/ContactsView'));\r\n\r\nexport default function App() {\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(authOperations.getCurrentUser());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Container>\r\n      <AppBar />\r\n      <Suspense fallback={<p>Loaded...</p>}>\r\n        <Switch>\r\n          <PublicRoute exact path=\"/\">\r\n            <HomeView />\r\n          </PublicRoute>\r\n          <PublicRoute path=\"/register\" restricted redirectTo=\"/contacts\">\r\n            <RegisterView />\r\n          </PublicRoute>\r\n          <PublicRoute path=\"/login\" restricted redirectTo=\"/contacts\">\r\n            <LoginView />\r\n          </PublicRoute>\r\n          <PrivateRoute path=\"/contacts\" redirectTo=\"/login\">\r\n            <ContactsView />\r\n          </PrivateRoute>\r\n        </Switch>\r\n      </Suspense>\r\n    </Container>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\nimport store from \"./redux/store\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport \"modern-normalize/modern-normalize.css\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store.store}>\r\n      <PersistGate loading={null} persistor={store.persistor}>\r\n        <BrowserRouter>\r\n          <App />\r\n        </BrowserRouter>\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst registerRequest = createAction(\"auth/registerRequest\");\r\nconst registerSuccess = createAction(\"auth/registerSuccess\");\r\nconst registerError = createAction(\"auth/registerError\");\r\n\r\nconst loginRequest = createAction(\"auth/loginRequest\");\r\nconst loginSuccess = createAction(\"auth/loginSuccess\");\r\nconst loginError = createAction(\"auth/loginError\");\r\n\r\nconst logoutRequest = createAction(\"auth/logoutRequest\");\r\nconst logoutSuccess = createAction(\"auth/logoutSuccess\");\r\nconst logoutError = createAction(\"auth/logoutError\");\r\n\r\nconst getCurrentUserRequest = createAction(\"auth/getCurrentUserRequest\");\r\nconst getCurrentUserSuccess = createAction(\"auth/getCurrentUserSuccess\");\r\nconst getCurrentUserError = createAction(\"auth/getCurrentUserError\");\r\n\r\nexport default {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n  getCurrentUserError,\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport authActions from \"./auth-actions\";\r\n\r\nconst initialUserState = { name: null, email: null };\r\n\r\nconst user = createReducer(initialUserState, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.user,\r\n  [authActions.logoutSuccess]: () => initialUserState,\r\n  [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\r\n});\r\n\r\nconst token = createReducer(null, {\r\n  [authActions.registerSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.loginSuccess]: (_, { payload }) => payload.token,\r\n  [authActions.logoutSuccess]: () => null,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n  [authActions.registerError]: (_, { payload }) => payload,\r\n  [authActions.loginError]: (_, { payload }) => payload,\r\n  [authActions.logoutError]: (_, { payload }) => payload,\r\n  [authActions.getCurrentUserError]: (_, { payload }) => payload,\r\n});\r\n\r\nconst isAuthenticated = createReducer(false, {\r\n  [authActions.registerSuccess]: () => true,\r\n  [authActions.loginSuccess]: () => true,\r\n  [authActions.getCurrentUserSuccess]: () => true,\r\n  [authActions.registerError]: () => false,\r\n  [authActions.loginError]: () => false,\r\n  [authActions.getCurrentUserError]: () => false,\r\n  [authActions.logoutSuccess]: () => false,\r\n});\r\nexport default combineReducers({\r\n  user,\r\n  token,\r\n  error,\r\n  isAuthenticated,\r\n});\r\n","import axios from \"axios\";\r\nimport authActions from \"./auth-actions\";\r\n\r\naxios.defaults.baseURL = \"https://connections-api.herokuapp.com\";\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = \"\";\r\n  },\r\n};\r\n\r\nconst register = (credentials) => async (dispatch) => {\r\n  dispatch(authActions.registerRequest());\r\n\r\n  try {\r\n    const response = await axios.post(\"/users/signup\", credentials);\r\n\r\n    token.set(response.data.token);\r\n    dispatch(authActions.registerSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(authActions.registerError(error.message));\r\n  }\r\n};\r\n\r\nconst logIn = (credentials) => async (dispatch) => {\r\n  dispatch(authActions.loginRequest());\r\n  try {\r\n    const response = await axios.post(\"/users/login\", credentials);\r\n\r\n    token.set(response.data.token);\r\n    dispatch(authActions.loginSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(authActions.loginError(error.message));\r\n  }\r\n};\r\n\r\nconst logOut = () => async (dispatch) => {\r\n  dispatch(authActions.logoutRequest());\r\n  try {\r\n    await axios.post(\"/users/logout\");\r\n\r\n    token.unset();\r\n    dispatch(authActions.logoutSuccess());\r\n  } catch (error) {\r\n    dispatch(authActions.logoutError(error.message));\r\n  }\r\n};\r\n\r\nconst getCurrentUser = () => async (dispatch, getState) => {\r\n  const {\r\n    auth: { token: persistedToken },\r\n  } = getState();\r\n  if (!persistedToken) {\r\n    return;\r\n  }\r\n  token.set(persistedToken);\r\n\r\n  dispatch(authActions.getCurrentUserRequest());\r\n\r\n  try {\r\n    const response = await axios.get(\"/users/current\");\r\n\r\n    dispatch(authActions.getCurrentUserSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(authActions.getCurrentUserError(error.message));\r\n  }\r\n};\r\n\r\nexport default { register, logIn, logOut, getCurrentUser };\r\n","const getIsAuthenticated = (state) => state.auth.isAuthenticated;\r\n\r\nconst getUsername = (state) => state.auth.user.name;\r\n\r\nexport default {\r\n  getIsAuthenticated,\r\n  getUsername,\r\n};\r\n"],"sourceRoot":""}