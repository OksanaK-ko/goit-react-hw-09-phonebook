{"version":3,"sources":["redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","components/ContactForm/ContactForm.js","components/Contacts/Contacts.js","components/Filter/Filter.js","views/ContactsView.js","components/ContactForm/ContactForm.module.css","components/Contacts/Contacts.module.css","components/Filter/Filter.module.css"],"names":["dispatch","fetchContactRequest","axios","get","then","data","fetchContactSuccess","catch","error","fetchContactError","message","name","number","contact","addContactRequest","post","addContactSuccess","addContactError","contactId","deleteContactRequest","delete","deleteContactSuccess","deleteContactError","getFilter","state","contacts","filter","getLoading","loading","getVisibleContacts","createSelector","items","normalizedFilter","toLowerCase","includes","ContactForm","useDispatch","useState","setName","setNumber","setError","useSelector","contactsSelectors","isLoadingContacts","CSSTransition","in","appear","classNames","timeout","unmountOnExit","Alert","variant","onSubmit","e","preventDefault","find","item","currentTarget","elements","value","setTimeout","contactsOperations","className","s","form","label","input","type","onChange","Button","size","block","defaultProps","Contacts","onDelete","useCallback","id","TransitionGroup","component","ContactList","map","ContactList_item","onClick","Filter","changeFilter","target","styles","bar","width","marginLeft","marginRight","padding","borderColor","boxShadow","title","fontSize","fontWeight","margin","color","ContactsView","useEffect","Container","style","module","exports"],"mappings":"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","file":"static/js/4.623b9714.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport {\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n  fetchContactError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n} from \"./contacts-actions\";\r\n\r\nconst fetchContacts = () => (dispatch) => {\r\n  dispatch(fetchContactRequest());\r\n  axios\r\n    .get(\"/contacts\")\r\n    .then(({ data }) => dispatch(fetchContactSuccess(data)))\r\n    .catch((error) => dispatch(fetchContactError(error.message)));\r\n};\r\n\r\nconst addContact = ({ name, number }) => (dispatch) => {\r\n  const contact = {\r\n    name,\r\n    number,\r\n  };\r\n\r\n  dispatch(addContactRequest());\r\n  axios\r\n    .post(\"/contacts\", contact)\r\n    .then(({ data }) => dispatch(addContactSuccess(data)))\r\n    .catch((error) => dispatch(addContactError(error.message)));\r\n};\r\n\r\nconst deleteContact = (contactId) => (dispatch) => {\r\n  dispatch(deleteContactRequest());\r\n  axios\r\n    .delete(`/contacts/${contactId}`)\r\n    .then(() => dispatch(deleteContactSuccess(contactId)))\r\n    .catch((error) => dispatch(deleteContactError(error.message)));\r\n};\r\n\r\nexport default {\r\n  fetchContacts,\r\n  addContact,\r\n  deleteContact,\r\n};\r\n","import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nconst getLoading = (state) => state.contacts.loading;\r\n\r\nconst getFilter = (state) => state.contacts.filter;\r\n\r\nconst getAllContacts = (state) => state.contacts.items;\r\n\r\nconst getVisibleContacts = createSelector(\r\n  [getAllContacts, getFilter],\r\n  (contacts, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n\r\n    return contacts.filter(({ name }) =>\r\n      name.toLowerCase().includes(normalizedFilter)\r\n    );\r\n  }\r\n);\r\n\r\nexport default {\r\n  getLoading,\r\n  getFilter,\r\n  getVisibleContacts,\r\n};\r\n","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { contactsOperations, contactsSelectors } from '../../redux/contacts';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport '../../css/animation.css';\r\nimport s from './ContactForm.module.css';\r\nimport { Alert } from 'react-bootstrap';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nexport default function ContactForm() {\r\n  const dispatch = useDispatch();\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const [error, setError] = useState(false);\r\n  const contacts = useSelector(contactsSelectors.getVisibleContacts);\r\n  const isLoadingContacts = useSelector(contactsSelectors.getLoading);\r\n  const handleNameChange = e => {\r\n    setName(e.currentTarget.value);\r\n  };\r\n  const handleNumberChange = e => {\r\n    setNumber(e.currentTarget.value);\r\n  };\r\n\r\n  const onSubmit = (name, number) =>\r\n    dispatch(contactsOperations.addContact({ name, number }));\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (\r\n      contacts.find(\r\n        item =>\r\n          item.name.toLowerCase() ===\r\n          e.currentTarget.elements[0].value.toLowerCase(),\r\n      )\r\n    ) {\r\n      setError(true);\r\n\r\n      return setTimeout(() => {\r\n        setError(false);\r\n      }, 1500);\r\n    }\r\n\r\n    onSubmit(name, number);\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n  return (\r\n    <div>\r\n      <CSSTransition\r\n        in={error}\r\n        appear={true}\r\n        classNames=\"error\"\r\n        timeout={250}\r\n        unmountOnExit\r\n      >\r\n        <Alert variant=\"warning\">This contact exists already!</Alert>\r\n      </CSSTransition>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className={s.form}>\r\n          <label className={s.label}>\r\n            Name\r\n            <input\r\n              className={s.input}\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={name}\r\n              onChange={handleNameChange}\r\n            />\r\n          </label>\r\n          <label className={s.label}>\r\n            Number\r\n            <input\r\n              className={s.input}\r\n              type=\"text\"\r\n              name=\"number\"\r\n              value={number}\r\n              onChange={handleNumberChange}\r\n            />\r\n          </label>\r\n          <Button variant=\"secondary\" size=\"lg\" block type=\"submit\">\r\n            Add contact\r\n          </Button>\r\n          {isLoadingContacts && <h1>Loading...</h1>}\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nContactForm.defaultProps = {\r\n  type: 'text',\r\n  name: null,\r\n};\r\n\r\nContactForm.propTypes = {\r\n  type: PropTypes.string,\r\n  name: PropTypes.string,\r\n};\r\n","import React, { useCallback } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { contactsOperations, contactsSelectors } from '../../redux/contacts';\r\nimport s from './Contacts.module.css';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nexport default function Contacts() {\r\n  const contacts = useSelector(contactsSelectors.getVisibleContacts);\r\n  const dispatch = useDispatch();\r\n  const onDelete = useCallback(\r\n    id => {\r\n      dispatch(contactsOperations.deleteContact(id));\r\n    },\r\n    [dispatch],\r\n  );\r\n\r\n  return (\r\n    <TransitionGroup component=\"ul\" className={s.ContactList}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <CSSTransition key={id} timeout={250} classNames={s}>\r\n          <li className={s.ContactList_item}>\r\n            {name}: {number}\r\n            <Button variant=\"danger\" size=\"sm\" onClick={() => onDelete(id)}>\r\n              Delete\r\n            </Button>\r\n          </li>\r\n        </CSSTransition>\r\n      ))}\r\n    </TransitionGroup>\r\n  );\r\n}\r\n\r\nContacts.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }).isRequired,\r\n  ),\r\n  onDeleteContact: PropTypes.func,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { contactsSelectors, changeFilter } from '../../redux/contacts';\r\nimport s from './Filter.module.css';\r\n\r\nexport default function Filter() {\r\n  const dispatch = useDispatch();\r\n  const value = useSelector(contactsSelectors.getFilter);\r\n\r\n  const onChange = e => dispatch(changeFilter(e.target.value));\r\n\r\n  return (\r\n    <div className={s.form}>\r\n      <label className={s.label}>\r\n        Find contacts by name\r\n        <input\r\n          className={s.input}\r\n          type=\"text\"\r\n          value={value}\r\n          onChange={onChange}\r\n        ></input>\r\n      </label>\r\n    </div>\r\n  );\r\n}\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChangeFilter: PropTypes.func.isRequired,\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport ContactForm from '../components/ContactForm/ContactForm';\r\nimport Contacts from '../components/Contacts/Contacts';\r\nimport Filter from '../components/Filter/Filter';\r\nimport Container from '../components/Container';\r\nimport { useDispatch } from 'react-redux';\r\nimport { contactsOperations } from '../redux/contacts';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport '../css/animation.css';\r\n// import { cleanup } from '@testing-library/react';\r\n\r\nconst styles = {\r\n  bar: {\r\n    width: 400,\r\n    marginLeft: 'auto',\r\n    marginRight: 'auto',\r\n    padding: '20 30',\r\n    borderColor: 'rgb(219, 216, 216)',\r\n    boxShadow: '0 4 4 rgba(0, 0, 0, 0.25)',\r\n  },\r\n  title: {\r\n    fontSize: '42',\r\n    fontWeight: '700',\r\n    margin: '0 0 15 0',\r\n    color: '#007bff',\r\n  },\r\n};\r\n\r\nexport default function ContactsView() {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(contactsOperations.fetchContacts());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Container>\r\n      <div style={styles.bar}>\r\n        <CSSTransition in={true} appear={true} classNames=\"fade\" timeout={500}>\r\n          <h1 style={styles.title}>Phonebook</h1>\r\n        </CSSTransition>\r\n        <ContactForm />\r\n\r\n        <CSSTransition in={true} classNames=\"fade\" timeout={500} unmountOnExit>\r\n          <Filter />\r\n        </CSSTransition>\r\n\r\n        <CSSTransition in={true} classNames=\"fade\" timeout={250} unmountOnExit>\r\n          <Contacts />\r\n        </CSSTransition>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"ContactForm_label__3JpD8\",\"form\":\"ContactForm_form__3RlYc\",\"input\":\"ContactForm_input__1YsuU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactList\":\"Contacts_ContactList__1FHCJ\",\"ContactList_item\":\"Contacts_ContactList_item__2nTUr\",\"button\":\"Contacts_button__7iNXC\",\"enter\":\"Contacts_enter__SbIuF\",\"enterActive\":\"Contacts_enterActive__oC3MZ\",\"exit\":\"Contacts_exit__1gpwd\",\"exitActive\":\"Contacts_exitActive__3FZL0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__1VWFy\",\"input\":\"Filter_input__ZmtD4\",\"form\":\"Filter_form__2fzYW\"};"],"sourceRoot":""}